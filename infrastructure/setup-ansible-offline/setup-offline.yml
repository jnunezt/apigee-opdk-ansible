---
- name: Setup Apigee OPDK Accelerator Offline
  hosts: "{{ target_host | default('localhost') }}"
  gather_facts: no
  tags: ['create']
  vars_files:
    - setup-offline-attributes.yml
  vars:
    property_folders:
      - "~/.apigee-secure"
      - "~/.apigee"
  roles:
    - { role: apigee-opdk-modules, tags: ['minimum', 'config', 'pg-config'] }
  tasks:
  - name: Create Archive folder
    file:
      path: "{{ archive_folder }}"
      state: directory

  - name: Download Ansible OPDK Accelerator
    git:
      repo: "{{ repository_secure_endpoint_https }}/{{ repo_name }}"
      dest: "{{ archive_folder }}/{{ repo_name }}"
      accept_hostkey: yes

  - name: Download Roles used by All Playbooks
    command: "ansible-galaxy install -r {{ item }} -f"
    with_items: "{{ playbook_requirements_path }}"

  - name: Uncomment apigee_archive_file_name attribute
    replace:
      path: "{{ local_apigee_path }}/custom-properties.yml"
      regexp: '#(apigee_archive_file_name: "apigee-{{ opdk_version }}.tar.gz)"'
      replace: '\1'
      backup: yes

  - name: Verify that rsync is installed
    become: true
    package:
      name: "rsync"
      state: present

  - name: Synchronize Folder List to Archive
    synchronize:
      src: "{{ item }}"
      dest: "{{ archive_folder }}"
    with_items: "{{ folder_list_to_archive }}"

  - name: Create an Ansible OPDK Accelerator Archive
    archive:
      dest: "{{ archive_folder }}.tar.gz"
      path: "{{ archive_folder }}"
      format: gz

- name: Upload Ansible OPDK Accelerator Archive
  hosts: "{{ target_offline_hosts }}"
  tags: ['upload']
  gather_facts: no
  vars_files:
    - setup-offline-attributes.yml
  vars:
    property_folders:
      - "~/.apigee-secure"
      - "~/.apigee"
  roles:
    - { role: apigee-opdk-modules, tags: ['minimum', 'config', 'pg-config'] }
  tasks:
  - name: Transfer Ansible OPDK Accelerator Archive to Target Host
    unarchive:
      dest: "/tmp"
      src: "{{ archive_folder }}.tar.gz"

  - name: Verify that rsync is installed
    become: true
    package:
      name: "rsync"
      state: present

  - name: Synchronize folder list to User Home on Target Host
    command: "rsync -avzh --remove-source-files --partial /tmp/{{ archive_target_folder_name }}/{{ item }} ~"
    with_items:
        - ".ansible"
        - ".apigee"
        - ".apigee-secure"
        - "{{ repo_name }}"

